{
  "contractName": "SimpleBet",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "maxBet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minBet",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockExpiration",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockDelay",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addBankroll",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableBetting_only_Owner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "enableBetting_only_Owner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36100e533610159640100000000026401000000009004565b6000600260006101000a81548160ff0219169083151502179055506000600260016101000a81548160ff021916908360ff16021790555060646002806101000a81548160ff021916908360ff160217905550662386f26fc10000600481905550670de0b6b3a7640000600381905550610313565b61017a8160016101c064010000000002610b0a179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156101fc57600080fd5b610215828261027f640100000000026401000000009004565b15151561022157600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156102bc57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610be6806103226000396000f3fe6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063148105ab146100f65780632c233cf1146101005780632e5b2168146101175780633f4ba83a1461014257806346fbf68e146101595780635c975abb146101c25780636ef8d66d146101f1578063715018a61461020857806382dc1ec41461021f5780638456cb59146102705780638da5cb5b146102875780638f32d59b146102de5780639619367d1461030d578063d4595aaa14610338578063d98f608814610369578063ec15740c1461039a578063f2fde38b146103b1575b600080fd5b6100fe610402565b005b34801561010c57600080fd5b50610115610433565b005b34801561012357600080fd5b5061012c610464565b6040518082815260200191505060405180910390f35b34801561014e57600080fd5b5061015761046a565b005b34801561016557600080fd5b506101a86004803603602081101561017c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610519565b604051808215151515815260200191505060405180910390f35b3480156101ce57600080fd5b506101d7610536565b604051808215151515815260200191505060405180910390f35b3480156101fd57600080fd5b5061020661054d565b005b34801561021457600080fd5b5061021d610558565b005b34801561022b57600080fd5b5061026e6004803603602081101561024257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061062a565b005b34801561027c57600080fd5b5061028561064a565b005b34801561029357600080fd5b5061029c6106fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ea57600080fd5b506102f3610723565b604051808215151515815260200191505060405180910390f35b34801561031957600080fd5b5061032261077a565b6040518082815260200191505060405180910390f35b34801561034457600080fd5b5061034d610780565b604051808260ff1660ff16815260200191505060405180910390f35b34801561037557600080fd5b5061037e610792565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103a657600080fd5b506103af6107a5565b005b3480156103bd57600080fd5b50610400600480360360208110156103d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107fa565b005b61040a610723565b151561041557600080fd5b600260009054906101000a900460ff1615151561043157600080fd5b565b61043b610723565b151561044657600080fd5b600260009054906101000a900460ff1615151561046257600080fd5b565b60035481565b61047333610519565b151561047e57600080fd5b600260009054906101000a900460ff16151561049957600080fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061052f82600161081990919063ffffffff16565b9050919050565b6000600260009054906101000a900460ff16905090565b610556336108ad565b565b610560610723565b151561056b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61063333610519565b151561063e57600080fd5b61064781610907565b50565b61065333610519565b151561065e57600080fd5b600260009054906101000a900460ff1615151561067a57600080fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60045481565b6002809054906101000a900460ff1681565b600260019054906101000a900460ff1681565b6107ad610723565b15156107b857600080fd5b600260009054906101000a900460ff161515156107d457600080fd5b6000600660006101000a81548160ff021916908360018111156107f357fe5b0217905550565b610802610723565b151561080d57600080fd5b61081681610961565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561085657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108c1816001610a5b90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b61091b816001610b0a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561099d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a9757600080fd5b610aa18282610819565b1515610aac57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b4657600080fd5b610b508282610819565b151515610b5c57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a723058207f7695f4adbec045b1e6814dde2800f32115dcc8c7ed15507d1f8d0c8fa6adad0029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063148105ab146100f65780632c233cf1146101005780632e5b2168146101175780633f4ba83a1461014257806346fbf68e146101595780635c975abb146101c25780636ef8d66d146101f1578063715018a61461020857806382dc1ec41461021f5780638456cb59146102705780638da5cb5b146102875780638f32d59b146102de5780639619367d1461030d578063d4595aaa14610338578063d98f608814610369578063ec15740c1461039a578063f2fde38b146103b1575b600080fd5b6100fe610402565b005b34801561010c57600080fd5b50610115610433565b005b34801561012357600080fd5b5061012c610464565b6040518082815260200191505060405180910390f35b34801561014e57600080fd5b5061015761046a565b005b34801561016557600080fd5b506101a86004803603602081101561017c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610519565b604051808215151515815260200191505060405180910390f35b3480156101ce57600080fd5b506101d7610536565b604051808215151515815260200191505060405180910390f35b3480156101fd57600080fd5b5061020661054d565b005b34801561021457600080fd5b5061021d610558565b005b34801561022b57600080fd5b5061026e6004803603602081101561024257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061062a565b005b34801561027c57600080fd5b5061028561064a565b005b34801561029357600080fd5b5061029c6106fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ea57600080fd5b506102f3610723565b604051808215151515815260200191505060405180910390f35b34801561031957600080fd5b5061032261077a565b6040518082815260200191505060405180910390f35b34801561034457600080fd5b5061034d610780565b604051808260ff1660ff16815260200191505060405180910390f35b34801561037557600080fd5b5061037e610792565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103a657600080fd5b506103af6107a5565b005b3480156103bd57600080fd5b50610400600480360360208110156103d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107fa565b005b61040a610723565b151561041557600080fd5b600260009054906101000a900460ff1615151561043157600080fd5b565b61043b610723565b151561044657600080fd5b600260009054906101000a900460ff1615151561046257600080fd5b565b60035481565b61047333610519565b151561047e57600080fd5b600260009054906101000a900460ff16151561049957600080fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061052f82600161081990919063ffffffff16565b9050919050565b6000600260009054906101000a900460ff16905090565b610556336108ad565b565b610560610723565b151561056b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61063333610519565b151561063e57600080fd5b61064781610907565b50565b61065333610519565b151561065e57600080fd5b600260009054906101000a900460ff1615151561067a57600080fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60045481565b6002809054906101000a900460ff1681565b600260019054906101000a900460ff1681565b6107ad610723565b15156107b857600080fd5b600260009054906101000a900460ff161515156107d457600080fd5b6000600660006101000a81548160ff021916908360018111156107f357fe5b0217905550565b610802610723565b151561080d57600080fd5b61081681610961565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561085657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108c1816001610a5b90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b61091b816001610b0a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561099d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a9757600080fd5b610aa18282610819565b1515610aac57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b4657600080fd5b610b508282610819565b151515610b5c57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a723058207f7695f4adbec045b1e6814dde2800f32115dcc8c7ed15507d1f8d0c8fa6adad0029",
  "sourceMap": "155:1732:1:-;;;974:355;8:9:-1;5:2;;;30:1;27;20:12;5:2;974:355:1;524:10:6;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;275:22:4;286:10;275;;;:22;;;:::i;:::-;362:5:5;352:7;;:15;;;;;;;;;;;;;;;;;;1022:1:1;1009:10;;:14;;;;;;;;;;;;;;;;;;1119:3;1101:15;;:21;;;;;;;;;;;;;;;;;;1181:9;1172:6;:18;;;;1261:11;1252:6;:20;;;;155:1732;;685:119:4;741:21;754:7;741:8;:12;;;;;;:21;;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;259:181:3:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:162::-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;155:1732:1:-;;;;;;;",
  "deployedSourceMap": "155:1732:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1336:86;;;;;;1536:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1536:92:1;;;;;;394:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:21:1;;;;;;;;;;;;;;;;;;;;;;;1176:115:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1176:115:5;;;;;;395:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;395:107:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:76:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;460:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;604:75:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:4;;;;;;1347:137:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:6;;;;;;508:90:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;508:90:4;;;;;;;;;;;;;;;;;;;;;;973:113:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;973:113:5;;;;;;659:77:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:6;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:6;;;;;;;;;;;;;;;;;;;;;;;;;;;441:21:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:21:1;;;;;;;;;;;;;;;;;;;;;;;323:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;323:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;235:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;235:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1634:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1634:130:1;;;;;;1655:107:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:6;;;;;;;;;;;;;;;;;;;;;;1336:86:1;863:9:6;:7;:9::i;:::-;855:18;;;;;;;;689:7:5;;;;;;;;;;;688:8;680:17;;;;;;;;1336:86:1:o;1536:92::-;863:9:6;:7;:9::i;:::-;855:18;;;;;;;;689:7:5;;;;;;;;;;;688:8;680:17;;;;;;;;1536:92:1:o;394:21::-;;;;:::o;1176:115:5:-;350:20:4;359:10;350:8;:20::i;:::-;342:29;;;;;;;;860:7:5;;;;;;;;;;;852:16;;;;;;;;1244:5;1234:7;;:15;;;;;;;;;;;;;;;;;;1264:20;1273:10;1264:20;;;;;;;;;;;;;;;;;;;;;;1176:115::o;395:107:4:-;451:4;474:21;487:7;474:8;:12;;:21;;;;:::i;:::-;467:28;;395:107;;;:::o;460:76:5:-;499:4;522:7;;;;;;;;;;;515:14;;460:76;:::o;604:75:4:-;647:25;661:10;647:13;:25::i;:::-;604:75::o;1347:137:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;508:90:4:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;973:113:5:-;350:20:4;359:10;350:8;:20::i;:::-;342:29;;;;;;;;689:7:5;;;;;;;;;;;688:8;680:17;;;;;;;;1042:4;1032:7;;:14;;;;;;;;;;;;;;;;;;1061:18;1068:10;1061:18;;;;;;;;;;;;;;;;;;;;;;973:113::o;659:77:6:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;441:21:1:-;;;;:::o;323:28::-;;;;;;;;;;;;;:::o;235:23::-;;;;;;;;;;;;;:::o;1634:130::-;863:9:6;:7;:9::i;:::-;855:18;;;;;;;;689:7:5;;;;;;;;;;;688:8;680:17;;;;;;;;1744:13:1;1727:14;;:30;;;;;;;;;;;;;;;;;;;;;;;;1634:130::o;1655:107:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;786:162:3:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;810:127:4:-;869:24;885:7;869:8;:15;;:24;;;;:::i;:::-;922:7;908:22;;;;;;;;;;;;810:127;:::o;685:119::-;741:21;754:7;741:8;:12;;:21;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;1906:183:6:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;514:184:3:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\";\n\ncontract SimpleBet is Ownable, Pausable {\n\n    // Game and Global Variables\n    uint8 public blockDelay; // How many blocks to wait to resolve RNG and allow payout\n    uint8 public blockExpiration; // How many blocks until bet expires\n    uint256 public maxBet; // Minimum bet size\n    uint256 public minBet; // Maximum bet size\n\n    // Record Bets in Struct\n    struct Bet {\n        address player;\n        bool rngResolved;\n        bool win;\n        bool input; // Stores bettor input\n        uint256 wager;\n        uint256 blockNumber; //block of bet\n        uint256 blockResolved; //block of spin\n        uint8 betResult;\n    }\n\n    Bet[] private bet;\n    \n    //records current status of player\n    enum Status {waitingForBet, waitingForResolved}\n\n\n    // Constructor with contract deployment inital settings \n    constructor() public {    \n        blockDelay = 0;          // How many blocks to wait to resolve RNG and allow payout\n        blockExpiration = 100;    // How many blocks until bet expires\n        minBet = 10 finney;        // Minimum bet size (1 Ether = 1,000 Finney)\n        maxBet = 1000 finney;     // Maximum bet size (1 Ether = 1,000 Finney)\n\n    }\n\n\n    function addBankroll() public payable \n        onlyOwner\n        whenNotPaused {\n    }\n\n    // Enable and disable betting\n    enum States{active, inactive}\n    States private contract_state;\n    \n    function disableBetting_only_Owner() public\n        onlyOwner \n        whenNotPaused {\n    }\n\n    function enableBetting_only_Owner() public\n        onlyOwner\n        whenNotPaused {\n        contract_state = States.active;\n    }\n\n    modifier onlyActive() {\n        require (contract_state!=States.inactive, \"Contract inactive.\");\n        _;\n    }\n\n\n}\n",
  "sourcePath": "/home/colin/localdev/consensys/final-project-colinmccrae/contracts/SimpleBet.sol",
  "ast": {
    "absolutePath": "/home/colin/localdev/consensys/final-project-colinmccrae/contracts/SimpleBet.sol",
    "exportedSymbols": {
      "SimpleBet": [
        162
      ]
    },
    "id": 163,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 163,
        "sourceUnit": 575,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 163,
        "sourceUnit": 466,
        "src": "89:64:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 574,
              "src": "177:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$574",
                "typeString": "contract Ownable"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "177:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 465,
              "src": "186:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$465",
                "typeString": "contract Pausable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "186:8:1"
          }
        ],
        "contractDependencies": [
          382,
          465,
          574
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 162,
        "linearizedBaseContracts": [
          162,
          465,
          382,
          574
        ],
        "name": "SimpleBet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "blockDelay",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "235:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 65,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "235:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "name": "blockExpiration",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "323:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 67,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "323:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 70,
            "name": "maxBet",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "394:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "394:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 72,
            "name": "minBet",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "441:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "441:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleBet.Bet",
            "id": 89,
            "members": [
              {
                "constant": false,
                "id": 74,
                "name": "player",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "539:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 73,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "name": "rngResolved",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "563:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 75,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "563:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "name": "win",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "589:8:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 77,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "name": "input",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "607:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 79,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "607:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "name": "wager",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "650:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "650:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "name": "blockNumber",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "673:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "673:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "name": "blockResolved",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "717:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "name": "betResult",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "764:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "764:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bet",
            "nodeType": "StructDefinition",
            "scope": 162,
            "src": "518:268:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 92,
            "name": "bet",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "792:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Bet_$89_storage_$dyn_storage",
              "typeString": "struct SimpleBet.Bet[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 90,
                "name": "Bet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 89,
                "src": "792:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bet_$89_storage_ptr",
                  "typeString": "struct SimpleBet.Bet"
                }
              },
              "id": 91,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "792:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Bet_$89_storage_$dyn_storage_ptr",
                "typeString": "struct SimpleBet.Bet[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SimpleBet.Status",
            "id": 95,
            "members": [
              {
                "id": 93,
                "name": "waitingForBet",
                "nodeType": "EnumValue",
                "src": "872:13:1"
              },
              {
                "id": 94,
                "name": "waitingForResolved",
                "nodeType": "EnumValue",
                "src": "887:18:1"
              }
            ],
            "name": "Status",
            "nodeType": "EnumDefinition",
            "src": "859:47:1"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "995:334:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "blockDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1009:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1022:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1009:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "blockExpiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1101:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1119:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1101:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "minBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1172:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1181:9:1",
                      "subdenomination": "finney",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000_by_1",
                        "typeString": "int_const 10000000000000000"
                      },
                      "value": "10"
                    },
                    "src": "1172:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "maxBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1252:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030",
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1261:11:1",
                      "subdenomination": "finney",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000"
                    },
                    "src": "1252:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:2:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:0:1"
            },
            "scope": 162,
            "src": "974:355:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1415:7:1",
              "statements": []
            },
            "documentation": null,
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 118,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 508,
                  "src": "1383:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1383:9:1"
              },
              {
                "arguments": null,
                "id": 120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 119,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 422,
                  "src": "1401:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1401:13:1"
              }
            ],
            "name": "addBankroll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1415:0:1"
            },
            "scope": 162,
            "src": "1336:86:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleBet.States",
            "id": 126,
            "members": [
              {
                "id": 124,
                "name": "active",
                "nodeType": "EnumValue",
                "src": "1474:6:1"
              },
              {
                "id": 125,
                "name": "inactive",
                "nodeType": "EnumValue",
                "src": "1482:8:1"
              }
            ],
            "name": "States",
            "nodeType": "EnumDefinition",
            "src": "1462:29:1"
          },
          {
            "constant": false,
            "id": 128,
            "name": "contract_state",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "1496:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_States_$126",
              "typeString": "enum SimpleBet.States"
            },
            "typeName": {
              "contractScope": null,
              "id": 127,
              "name": "States",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 126,
              "src": "1496:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_States_$126",
                "typeString": "enum SimpleBet.States"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1621:7:1",
              "statements": []
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 131,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 130,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 508,
                  "src": "1588:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1588:9:1"
              },
              {
                "arguments": null,
                "id": 133,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 132,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 422,
                  "src": "1607:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1607:13:1"
              }
            ],
            "name": "disableBetting_only_Owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1570:2:1"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1621:0:1"
            },
            "scope": 162,
            "src": "1536:92:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1717:47:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "contract_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "1727:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$126",
                        "typeString": "enum SimpleBet.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1744:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$126_$",
                          "typeString": "type(enum SimpleBet.States)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1744:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$126",
                        "typeString": "enum SimpleBet.States"
                      }
                    },
                    "src": "1727:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$126",
                      "typeString": "enum SimpleBet.States"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 139,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 138,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 508,
                  "src": "1685:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1685:9:1"
              },
              {
                "arguments": null,
                "id": 141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 140,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 422,
                  "src": "1703:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1703:13:1"
              }
            ],
            "name": "enableBetting_only_Owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1667:2:1"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:0:1"
            },
            "scope": 162,
            "src": "1634:130:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1792:91:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$126",
                          "typeString": "enum SimpleBet.States"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 152,
                          "name": "contract_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "1811:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$126",
                            "typeString": "enum SimpleBet.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 153,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1827:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$126_$",
                              "typeString": "type(enum SimpleBet.States)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "inactive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1827:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$126",
                            "typeString": "enum SimpleBet.States"
                          }
                        },
                        "src": "1811:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e747261637420696e6163746976652e",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:20:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9af28b79bf26b3a81d476317b035fee0dd28181b14d2e91b2cc6a4396733400a",
                          "typeString": "literal_string \"Contract inactive.\""
                        },
                        "value": "Contract inactive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9af28b79bf26b3a81d476317b035fee0dd28181b14d2e91b2cc6a4396733400a",
                          "typeString": "literal_string \"Contract inactive.\""
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        592,
                        593
                      ],
                      "referencedDeclaration": 593,
                      "src": "1802:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1802:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1802:63:1"
                },
                {
                  "id": 159,
                  "nodeType": "PlaceholderStatement",
                  "src": "1875:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 161,
            "name": "onlyActive",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:1"
            },
            "src": "1770:113:1",
            "visibility": "internal"
          }
        ],
        "scope": 163,
        "src": "155:1732:1"
      }
    ],
    "src": "0:1888:1"
  },
  "legacyAST": {
    "absolutePath": "/home/colin/localdev/consensys/final-project-colinmccrae/contracts/SimpleBet.sol",
    "exportedSymbols": {
      "SimpleBet": [
        162
      ]
    },
    "id": 163,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 163,
        "sourceUnit": 575,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 163,
        "sourceUnit": 466,
        "src": "89:64:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 574,
              "src": "177:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$574",
                "typeString": "contract Ownable"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "177:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 465,
              "src": "186:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$465",
                "typeString": "contract Pausable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "186:8:1"
          }
        ],
        "contractDependencies": [
          382,
          465,
          574
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 162,
        "linearizedBaseContracts": [
          162,
          465,
          382,
          574
        ],
        "name": "SimpleBet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "blockDelay",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "235:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 65,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "235:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "name": "blockExpiration",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "323:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 67,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "323:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 70,
            "name": "maxBet",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "394:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "394:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 72,
            "name": "minBet",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "441:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "441:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleBet.Bet",
            "id": 89,
            "members": [
              {
                "constant": false,
                "id": 74,
                "name": "player",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "539:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 73,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "name": "rngResolved",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "563:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 75,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "563:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "name": "win",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "589:8:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 77,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "name": "input",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "607:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 79,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "607:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "name": "wager",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "650:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "650:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "name": "blockNumber",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "673:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "673:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "name": "blockResolved",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "717:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "name": "betResult",
                "nodeType": "VariableDeclaration",
                "scope": 89,
                "src": "764:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "764:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bet",
            "nodeType": "StructDefinition",
            "scope": 162,
            "src": "518:268:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 92,
            "name": "bet",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "792:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Bet_$89_storage_$dyn_storage",
              "typeString": "struct SimpleBet.Bet[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 90,
                "name": "Bet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 89,
                "src": "792:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bet_$89_storage_ptr",
                  "typeString": "struct SimpleBet.Bet"
                }
              },
              "id": 91,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "792:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Bet_$89_storage_$dyn_storage_ptr",
                "typeString": "struct SimpleBet.Bet[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SimpleBet.Status",
            "id": 95,
            "members": [
              {
                "id": 93,
                "name": "waitingForBet",
                "nodeType": "EnumValue",
                "src": "872:13:1"
              },
              {
                "id": 94,
                "name": "waitingForResolved",
                "nodeType": "EnumValue",
                "src": "887:18:1"
              }
            ],
            "name": "Status",
            "nodeType": "EnumDefinition",
            "src": "859:47:1"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "995:334:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "blockDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1009:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1022:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1009:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "blockExpiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1101:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1119:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1101:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "minBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1172:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1181:9:1",
                      "subdenomination": "finney",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000_by_1",
                        "typeString": "int_const 10000000000000000"
                      },
                      "value": "10"
                    },
                    "src": "1172:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "maxBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1252:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030",
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1261:11:1",
                      "subdenomination": "finney",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000"
                    },
                    "src": "1252:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:2:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:0:1"
            },
            "scope": 162,
            "src": "974:355:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1415:7:1",
              "statements": []
            },
            "documentation": null,
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 118,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 508,
                  "src": "1383:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1383:9:1"
              },
              {
                "arguments": null,
                "id": 120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 119,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 422,
                  "src": "1401:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1401:13:1"
              }
            ],
            "name": "addBankroll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1415:0:1"
            },
            "scope": 162,
            "src": "1336:86:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleBet.States",
            "id": 126,
            "members": [
              {
                "id": 124,
                "name": "active",
                "nodeType": "EnumValue",
                "src": "1474:6:1"
              },
              {
                "id": 125,
                "name": "inactive",
                "nodeType": "EnumValue",
                "src": "1482:8:1"
              }
            ],
            "name": "States",
            "nodeType": "EnumDefinition",
            "src": "1462:29:1"
          },
          {
            "constant": false,
            "id": 128,
            "name": "contract_state",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "1496:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_States_$126",
              "typeString": "enum SimpleBet.States"
            },
            "typeName": {
              "contractScope": null,
              "id": 127,
              "name": "States",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 126,
              "src": "1496:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_States_$126",
                "typeString": "enum SimpleBet.States"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1621:7:1",
              "statements": []
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 131,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 130,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 508,
                  "src": "1588:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1588:9:1"
              },
              {
                "arguments": null,
                "id": 133,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 132,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 422,
                  "src": "1607:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1607:13:1"
              }
            ],
            "name": "disableBetting_only_Owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1570:2:1"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1621:0:1"
            },
            "scope": 162,
            "src": "1536:92:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1717:47:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "contract_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "1727:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$126",
                        "typeString": "enum SimpleBet.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1744:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$126_$",
                          "typeString": "type(enum SimpleBet.States)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1744:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$126",
                        "typeString": "enum SimpleBet.States"
                      }
                    },
                    "src": "1727:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$126",
                      "typeString": "enum SimpleBet.States"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 139,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 138,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 508,
                  "src": "1685:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1685:9:1"
              },
              {
                "arguments": null,
                "id": 141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 140,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 422,
                  "src": "1703:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1703:13:1"
              }
            ],
            "name": "enableBetting_only_Owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1667:2:1"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:0:1"
            },
            "scope": 162,
            "src": "1634:130:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1792:91:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$126",
                          "typeString": "enum SimpleBet.States"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 152,
                          "name": "contract_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "1811:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$126",
                            "typeString": "enum SimpleBet.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 153,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1827:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$126_$",
                              "typeString": "type(enum SimpleBet.States)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "inactive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1827:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$126",
                            "typeString": "enum SimpleBet.States"
                          }
                        },
                        "src": "1811:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e747261637420696e6163746976652e",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:20:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9af28b79bf26b3a81d476317b035fee0dd28181b14d2e91b2cc6a4396733400a",
                          "typeString": "literal_string \"Contract inactive.\""
                        },
                        "value": "Contract inactive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9af28b79bf26b3a81d476317b035fee0dd28181b14d2e91b2cc6a4396733400a",
                          "typeString": "literal_string \"Contract inactive.\""
                        }
                      ],
                      "id": 151,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        592,
                        593
                      ],
                      "referencedDeclaration": 593,
                      "src": "1802:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1802:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1802:63:1"
                },
                {
                  "id": 159,
                  "nodeType": "PlaceholderStatement",
                  "src": "1875:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 161,
            "name": "onlyActive",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:1"
            },
            "src": "1770:113:1",
            "visibility": "internal"
          }
        ],
        "scope": 163,
        "src": "155:1732:1"
      }
    ],
    "src": "0:1888:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-23T21:08:59.952Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}